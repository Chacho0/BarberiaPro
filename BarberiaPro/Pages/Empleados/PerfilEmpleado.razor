@page "/perfil-empleado"
@using BarberiaPro.Models
@using BarberiaPro.Services
@inject UserStateService UserStateService
@inject EmpleadoService EmpleadoService
@inject UsuarioService UsuarioService
@inject IJSRuntime Runtime
@inject NavigationManager Navigation

<h3>Perfil del Empleado</h3>
<div class="fondo-container">
</div>
@if (empleado != null && empleado.Usuario != null)
{
    <EditForm Model="@empleado" OnValidSubmit="GuardarPerfil">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label>Nombre:</label>
            <InputText @bind-Value="empleado.Nombre" class="form-control" />
        </div>

        <div class="form-group">
            <label>Apellido:</label>
            <InputText @bind-Value="empleado.Apellido" class="form-control" />
        </div>

        <div class="form-group">
            <label>Teléfono:</label>
            <InputText @bind-Value="empleado.Telefono" class="form-control" />
        </div>

        <div class="form-group">
            <label>Estado:</label>
            <InputCheckbox @bind-Value="empleado.Estado" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Guardar Cambios</button>
    </EditForm>
}
else
{
    <h3>Crear Perfil del Empleado</h3>
    <EditForm Model="@empleado" OnValidSubmit="GuardarPerfil">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Nombre:</label>
            <InputText @bind-Value="empleado.Nombre" class="form-control" />
        </div>

        <div class="form-group">
            <label>Apellido:</label>
            <InputText @bind-Value="empleado.Apellido" class="form-control" />
        </div>

        <div class="form-group">
            <label>Teléfono:</label>
            <InputText @bind-Value="empleado.Telefono" class="form-control" />
        </div>

        <div class="form-group">
            <label>Estado:</label>
            <InputCheckbox @bind-Value="empleado.Estado" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Crear Perfil</button>
    </EditForm>
}

@code {
    private Empleado empleado = new Empleado();

    protected override async Task OnInitializedAsync()
    {
        if (UserStateService.UserId.HasValue)
        {
            var userId = UserStateService.UserId.Value;
            empleado = await EmpleadoService.ObtenerEmpleadoAsync(userId);

            if (empleado == null)
            {
                var usuario = await UsuarioService.GetUsuarioAsync(userId);

                if (usuario != null)
                {
                    empleado = new Empleado
                        {
                            IdUsuario = userId,
                            Usuario = usuario
                        };
                }
                else
                {
                    Console.WriteLine($"No se encontró el usuario con Id: {userId}");
                    Navigation.NavigateTo("/error");
                    return;
                }
            }
        }
        else
        {
            empleado = new Empleado
                {
                    Usuario = new Usuario
                    {
                        Nombre = "Invitado",
                        Correo = "invitado@ejemplo.com"
                    }
                };
        }
    }

    private async Task GuardarPerfil()
    {
        if (empleado.IdEmpleado == 0)
        {
            if (UserStateService.UserId.HasValue)
            {
                empleado.IdUsuario = UserStateService.UserId.Value;
            }
            await EmpleadoService.GuardarEmpleadoAsync(empleado);
        }
        else
        {
            await EmpleadoService.GuardarEmpleadoAsync(empleado);
        }

        Console.WriteLine("Perfil guardado correctamente.");
    }
}