@using BarberiaPro.Models
@using BarberiaPro.Services
@inject UserStateService UserStateService
@inject UsuarioService UsuarioService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <!-- Agrega la imagen del logo aquí -->
        <a class="navbar-brand" href="">
        
            Barberia RD
        </a>

        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        
        <div class="nav-item px-3">
            <img src="/Logos.jpeg" style="height: 150px; width: 150px; border-radius: 50%; margin-left: 30px;" />
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <!-- Mostrar enlace solo si el usuario es Admin -->
        @if (TieneAcceso(TipoRolEnum.Admin))
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="control-usuarios">
                    <span class="oi oi-plus" aria-hidden="true"></span> Control de Usuarios
                </NavLink>
            </div>
        }
        <!-- Mostrar enlace solo si el usuario es Admin -->
        @if (TieneAcceso(TipoRolEnum.Admin))
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="control-servicios">
                    <span class="oi oi-plus" aria-hidden="true"></span> Control de Servicios
                </NavLink>
            </div>
        }
        <!-- Mostrar enlace solo si el usuario es Admin -->
        @if (TieneAcceso(TipoRolEnum.Admin))
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="aprobar-citas">
                    <span class="oi oi-plus" aria-hidden="true"></span> Solicitudes de Citas
                </NavLink>
            </div>
        } @if (TieneAcceso(TipoRolEnum.Admin))
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="admin-clientes">
                    <span class="oi oi-plus" aria-hidden="true"></span> Listado de Pagos Citas
                </NavLink>
            </div>
        }
        @if (TieneAcceso(TipoRolEnum.Cliente))
        {

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="cliente-inicio">
                    <span class="oi oi-plus" aria-hidden="true"></span> Solicitar Citas
                </NavLink>
            </div>

        } 
        @if (TieneAcceso(TipoRolEnum.Cliente))
        {

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="perfil-cliente">
                    <span class="oi oi-person" aria-hidden="true"></span> Perfil
                </NavLink>
            </div>

        }@if (TieneAcceso(TipoRolEnum.Cliente))
        {

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="mis-citas">
                    <span class="oi oi-person" aria-hidden="true"></span> Mis Citas
                </NavLink>
            </div>

        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private TipoRolEnum? rolUsuario;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        // Obtener el rol del usuario al inicializar el componente
        if (UserStateService.UserId.HasValue)
        {
            rolUsuario = await UsuarioService.ObtenerRolUsuarioAsync(UserStateService.UserId.Value);
        }
    }

    // Método para verificar si el usuario tiene acceso a una página
    private bool TieneAcceso(TipoRolEnum rolRequerido)
    {
        return rolUsuario == rolRequerido;
    }
}